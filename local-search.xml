<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>frp反代，让你的服务运行在公网上</title>
    <link href="/2022/07/26/frp/"/>
    <url>/2022/07/26/frp/</url>
    
    <content type="html"><![CDATA[<h3 id="一、frp-是什么？"><a href="#一、frp-是什么？" class="headerlink" title="一、frp 是什么？"></a>一、frp 是什么？</h3><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p><strong>为什么使用 frp？</strong></p><p>通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网，同时提供诸多专业的功能特性，这包括：</p><ul><li>客户端服务端通信支持 TCP、KCP 以及 Websocket 等多种协议。</li><li>采用 TCP 连接流式复用，在单个连接间承载更多请求，节省连接建立时间。</li><li>代理组间的负载均衡。</li><li>端口复用，多个服务通过同一个服务端端口暴露。</li><li>多个原生支持的客户端插件（静态文件查看，HTTP、SOCK5 代理等），便于独立使用 frp 客户端完成某些工作。</li><li>高度扩展性的服务端插件系统，方便结合自身需求进行功能扩展。</li><li>服务端和客户端 UI 页面。</li></ul><h3 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h3><p><strong>1、准备</strong></p><ul><li>有公网ip的vps作为服务端，linux，windows都可，甚至是我不认识的darwin，提供反代服务</li><li>提供web服务的客户端，需要进行端口代理的机器（废话）</li></ul><p><strong>2、下载服务端和客户端文件</strong></p><p>frp下载地址：<a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a> 下载最新版本，正常类型amd64即可，环境不同注意区分。</p><p>解压包中包含客户端和服务端，如果你和我一样是linux+windows就是需要下这两个，然后对应取出服务端和客户端文件</p><h3 id="三、安装使用"><a href="#三、安装使用" class="headerlink" title="三、安装使用"></a>三、安装使用</h3><p><strong>1、服务端部署</strong></p><p>解压得到的服务端文件，丢进服务器目录任意位置，编辑配置文件<code>frps.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span><br><span class="hljs-attr">vhost_http_port</span> = <span class="hljs-number">8000</span><br><span class="hljs-attr">vhost_https_port</span> = <span class="hljs-number">90</span><br><br><span class="hljs-comment">#面板账号</span><br><span class="hljs-attr">dashboard_user</span>  = admin  <br><span class="hljs-comment">#面板密码</span><br><span class="hljs-attr">dashboard_pwd</span> = admin<br><span class="hljs-comment">#面板服务端口，启动成功后可通过浏览器访问如http://ip:7500</span><br><span class="hljs-attr">dashboard_port</span> = <span class="hljs-number">7500</span>  <br></code></pre></td></tr></table></figure><p><strong>2、服务端运行frps服务</strong></p><p>目录下<code>.\frps -c .\fprs.ini</code>运行即可，建议配合<code>screen</code>常驻服务</p><p><strong>3、客户端部署</strong></p><p>解压得到的客户端文件，编辑 <code>frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = XXX.XXX.XXX.XXX<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-section">[rdp]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">3389</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">3389</span><br><br><span class="hljs-section">[Minecraft]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">25565</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">25565</span><br></code></pre></td></tr></table></figure><p><font color=#c7254e>server_addr</font> 为 服务端IP</p><p><font color=#c7254e>server_port</font> 为 服务端端口 即上文中的 7000</p><p><font color=#c7254e>type</font> 为 代理类型</p><p><font color=#c7254e>local_ip</font> 为 要进行内网穿透的内网服务器地址</p><p><font color=#c7254e>local_port</font> 为 要进行内网穿透的内网服务器的应用端口</p><p><font color=#c7254e>remote_port</font> 为 服务端监听的端口</p><blockquote><p>注：rdp:3389为微软远程桌面默认端口，mc:25565为我的世界默认端口</p><p>其它服务可根据格式自定义修改</p></blockquote><p><strong>4、客户端运行</strong></p><p>在目录下cmd运行<code>.\frps -c .\fprs.ini</code></p><p><strong>5、服务商防火墙端口放行</strong></p><blockquote><p>tcp:7000 #server_port</p><p>tcp:7500 #dashboard</p><p>tcp:3389 #rdp</p><p>tcp:25565 #minecraft</p><p>tcp:… #…</p></blockquote><h3 id="四、开机自启"><a href="#四、开机自启" class="headerlink" title="四、开机自启"></a>四、开机自启</h3><p>Windows开机自启脚本，省略一项步骤（<del>归根结底还是公网ip香</del>）</p><p><strong>1、在frpc目录下新建frpstart.bat，内容如下:</strong></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br>:home<br>frpc -c frpc.ini<br><span class="hljs-keyword">goto</span> home<br></code></pre></td></tr></table></figure><p><strong>2、打开开始菜单，输入 “任务计划程序” 将会自动搜索，接着打开它。</strong></p><p><strong>3、点击右侧“创建任务”</strong></p><p><a href="https://imgtu.com/i/jxRJXQ"><img src="https://s1.ax1x.com/2022/07/26/jxRJXQ.png" alt="jxRJXQ.png"></a></p><p><strong>4、创建任务，自定义参数</strong></p><p><a href="https://imgtu.com/i/jxRG6g"><img src="https://s1.ax1x.com/2022/07/26/jxRG6g.png" alt="jxRG6g.png"></a></p><blockquote><p>1名称</p><p>2可选</p><p>3可选</p><p>4运行frpc时隐藏bash命令行</p></blockquote><p><strong>5、编辑触发器</strong></p><p><a href="https://imgtu.com/i/jxROAI"><img src="https://s1.ax1x.com/2022/07/26/jxROAI.png" alt="jxROAI.png"></a></p><p><strong>6、编辑操作</strong></p><p>选择第一步中新建的bat脚本，例E:\yuhui\Downloads\frp_0.44.0_windows_amd64\frpcstart.bat</p><p><a href="https://imgtu.com/i/jxIbDS"><img src="https://s1.ax1x.com/2022/07/26/jxIbDS.png" alt="jxIbDS.png"></a></p><p>在程序或脚本一栏选择第一步创建的 start.bat，下面的 “起始于” 填写 frpcstart.bat 的上级目录路径（即不要包含 frpcstart.bat）</p><p>例如：E:\yuhui\Downloads\frp_0.44.0_windows_amd64<del>\frpcstart.bat</del></p><p><strong>亲测不填这个没法自启</strong></p><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><p><strong>放行服务商腾讯云25565端口</strong>，</p><p>本地启动我的世界服务端核心，mc客户端连接ip:25565，完美连接。</p><p>此处的我的世界联机默认端口25565是要带的，毕竟是反代的端口</p><p><a href="https://imgtu.com/i/jx5Tw4"><img src="https://s1.ax1x.com/2022/07/26/jx5Tw4.md.png" alt="jx5Tw4.md.png"  /></a></p><p><a href="https://imgtu.com/i/jxfnit"><img src="https://s1.ax1x.com/2022/07/26/jxfnit.png" alt="jxfnit.png"></a></p><h3 id="六、管理"><a href="#六、管理" class="headerlink" title="六、管理"></a>六、管理</h3><p>访问<code>ip:7500</code>可以清楚的看到所有正在反代中的端口</p><p><a href="https://imgtu.com/i/jxTjlq"><img src="https://s1.ax1x.com/2022/07/26/jxTjlq.png" alt="jxTjlq.png"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>轻量代理服务TinyProxy部署</title>
    <link href="/2022/07/26/tinyproxy/"/>
    <url>/2022/07/26/tinyproxy/</url>
    
    <content type="html"><![CDATA[<h3 id="一、TinyProxy介绍"><a href="#一、TinyProxy介绍" class="headerlink" title="一、TinyProxy介绍"></a>一、TinyProxy介绍</h3><p>TinyProxy 是一个轻量级的开源 web 代理守护进程，其设计目标是快而小。它适用于需要完整 HTTP 代理特性，但系统资源又不足以运行大型代理的场景，比如嵌入式部署。它对小规模网络非常有用，这样的场合下大型代理会使系统资源紧张，或有安全风险。</p><p>Tinyproxy 的一个关键特性是其缓冲连接的理念。从效果上看， TinyProxy 对服务器的响应进行了高速缓冲，然后按照客户端能够处理的最高速度进行响应。该特性极大的降低了网络延滞带来的问题。</p><h3 id="二、准备"><a href="#二、准备" class="headerlink" title="二、准备"></a>二、准备</h3><ul><li>具备公网IP的服务器（Ubuntu 22.04 LTS，腾讯云）</li><li>本地计算机（windows 10）</li></ul><h3 id="三、安装"><a href="#三、安装" class="headerlink" title="三、安装"></a>三、安装</h3><p><strong>1.在服务器安装程序TinyProxy</strong></p><p><code>apt update</code></p><p><code>apt install tinyproxy</code></p><p><strong>2.在服务器打开配置文件</strong></p><p><code>vim /etc/tinyproxy/tinyproxy.conf</code></p><p><strong>3.修改该配置文件</strong></p><p>①定义端口</p><blockquote><p>#定义监听端口，默认端口为8888，当然你可以更改为你喜欢的端口。(防扫描?)</p><p>#若果端口号小于1024，则需要使用root启动tinyproxy。</p><p>Port 8888</p></blockquote><p>②设置允许连接的ip</p><blockquote><p>#定义允许连接的IP，默认只允许本地计算机连接。</p><p>#若前面加#屏蔽此参数，则允许所有人连接。国内服务商给的内网ip大多为动态ip，经常变动，建议#注释掉该项。</p><p>#Allow 127.0.0.1</p></blockquote><p><strong>4.启动&#x2F;停止&#x2F;状态&#x2F;重启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start tinyproxy.service<br>systemctl stop tinyproxy.service<br>systemctl status tinyproxy.service<br>systemctl restart tinyproxy.service<br></code></pre></td></tr></table></figure><p><strong>附：查看日志</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">tailf <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/tinyproxy/</span>tinyproxy.log<br></code></pre></td></tr></table></figure><h3 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h3><p><strong>1.windows全局</strong></p><p>在设置→网络→代理中设置你的ip和服务端口即可</p><p><a href="https://imgtu.com/i/jxcWAP"><img src="https://s1.ax1x.com/2022/07/26/jxcWAP.jpg" alt="jxcWAP.jpg" style="zoom: 80%;" /></a></p><p><strong>2.chrome插件</strong></p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh">SwitchyOmega</a></p><p><a href="https://imgtu.com/i/jxcTXj"><img src="https://s1.ax1x.com/2022/07/26/jxcTXj.png" alt="jxcTXj.png" style="zoom: 80%;" /></a></p><p><strong>3.配置好后查本机ip如下，代理成功</strong></p><p><a href="https://imgtu.com/i/jxcftf"><img src="https://s1.ax1x.com/2022/07/26/jxcftf.png" alt="jxcftf.png" style="zoom: 80%;" /></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu下青龙面板+京东如何薅羊毛</title>
    <link href="/2022/07/06/QlServiceInstall/"/>
    <url>/2022/07/06/QlServiceInstall/</url>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>青龙面板是一个多功能的可视化面板，利用青龙面板可以自动执行京东领京豆，做东东农场任务签到浇水免费领水果，京喜牧场养小鸡收集鸡蛋，京东极速版金币，京东赚赚领金币，东东萌宠喂养等等。同时还能自动领取京东红包、京喜红包、京东极速版红包……</p><h3 id="二、安装Docker"><a href="#二、安装Docker" class="headerlink" title="二、安装Docker"></a>二、安装Docker</h3><p>国内：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br></code></pre></td></tr></table></figure><p>国外：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://get.docker.com | bash -s docker<br></code></pre></td></tr></table></figure><p>启动Docker并设置自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start docker<br>sudo systemctl <span class="hljs-built_in">enable</span> docker<br></code></pre></td></tr></table></figure><p>拉取镜像，如果你是群辉之类的 NAS 安装青龙镜像，在 Dockers 官方镜像列表中拉取最新版的青龙镜像，直接使用 Dockers 搜索镜像<code>qinglong</code>即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull whyour/qinglong:latest<br></code></pre></td></tr></table></figure><p>部署面板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -dit \<br>-v <span class="hljs-variable">$PWD</span>/ql/config:/ql/config \<br>-v <span class="hljs-variable">$PWD</span>/ql/log:/ql/log \<br>-v <span class="hljs-variable">$PWD</span>/ql/db:/ql/db \<br>-p 5700:5700 \<br>--name qinglong \<br>--hostname qinglong \<br>--restart always \<br>whyour/qinglong:latest<br></code></pre></td></tr></table></figure><blockquote><p>放行TCP端口：5700</p><p>注：这个端口可以修改，防止别人扫默认端口5700。现在不改也没问题，也可以后期修改。</p></blockquote><h3 id="三、进入面板"><a href="#三、进入面板" class="headerlink" title="三、进入面板"></a>三、进入面板</h3><p>部署完成后，直接访问<code>IP:5700</code>访问青龙面板的安装界面。</p><p>接着按流程提示操作即可</p><h3 id="四、拉取任务库"><a href="#四、拉取任务库" class="headerlink" title="四、拉取任务库"></a>四、拉取任务库</h3><p>点击右上角新建任务，将下面的拉库指令一条一条填进去即可，这里分享的一共有9条。</p><p>定时规则可以默认填写<code>0 0 0 * * *</code>，每天0点更新，也可以自己定义。</p><p><a href="https://imgtu.com/i/jaB6MT"><img src="https://s1.ax1x.com/2022/07/06/jaB6MT.png" alt="jaB6MT.png"></a></p><p>下面分享一些大佬们整合的拉库链接，可以全部添加，也可以只选一条好用的库添加。</p><p>因为全部添加的话它们之间会有检测重复任务的脚本，当你运行时它们会互相删除。实测9个库拉出1500条任务，脚本互删之后只剩200左右。</p><p>所以我只选择了最后一条使用，库名是<code>yyds</code>，<a href="https://github.com/okyyds/yydspure/tree/master">项目地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">ql repo https://github.com/KingRan/KR.git <span class="hljs-string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span><br><br>ql repo https://github.com/curtinlv/JD-Script.git<br><br>ql repo https://github.com/Zy143L/wskey.git <span class="hljs-string">&quot;wskey&quot;</span><br><br>ql repo ql repo https://github.com/smiek2121/scripts.git <span class="hljs-string">&quot;jd_|gua_&quot;</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js|cleancart_activity.js|jdCookie.js|sendNotify.js&quot;</span><br><br>ql repo https://github.com/Yun-City/City.git <span class="hljs-string">&quot;jd_|jx_|gua_|jddj_|getJDCookie&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|function|utils|sendnotify|ZooFaker_Necklace|jd_Cookie|JDJRValidator_|sign_graphics_validate|ql|magic|cleancart_activity&quot;</span><br><br>ql repo https://github.com/6dylan6/jdpro.git <span class="hljs-string">&quot;jd_|jx_|jddj_&quot;</span> <span class="hljs-string">&quot;backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|JD|function|sendNotify&quot;</span><br><br>ql repo https://github.com/gys619/Absinthe.git <span class="hljs-string">&quot;jd_|jx_|jddj_|gua_|getJDCookie|wskey&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|utils|ZooFaker_Necklace|JDJRValidator_|sign_graphics_validate|jddj_cookie|function|ql|magic|JDJR|JD&quot;</span> <span class="hljs-string">&quot;main&quot;</span><br><br>ql repo https://github.com/zero205/JD_tencent_scf.git <span class="hljs-string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="hljs-string">&quot;backUp|icon&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span> <span class="hljs-string">&quot;main&quot;</span><br><br>ql repo https://github.com/whyour/hundun.git <span class="hljs-string">&quot;quanx&quot;</span> <span class="hljs-string">&quot;tokens|caiyun|didi|donate|fold|Env&quot;</span><br><br>ql repo https://github.com/okyyds/yydspure.git <span class="hljs-string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="hljs-string">&quot;master&quot;</span><br></code></pre></td></tr></table></figure><p>添加完后运行这一条，等待它自动拉取即可，如果是国内服务器的话会稍微久一些。</p><h3 id="五、配置京东cookie"><a href="#五、配置京东cookie" class="headerlink" title="五、配置京东cookie"></a>五、配置京东cookie</h3><p>安装好面板后，你还需要给面板你的京东cookie以用来登录你的账号</p><p>这里我使用的是安卓软件<a href="https://www.alookweb.com/">Alook</a>来登录<a href="https://m.jd.com/">京东移动端</a>获取我的cookie，用过电脑浏览器好像不怎么好使，因为我有清电脑端ck的习惯，一退出好像ck就失效了。</p><p>用<a href="https://www.alookweb.com/">Alook</a>登录<a href="https://m.jd.com/">京东移动端</a>后在 <strong>工具箱→开发者工具→Cookies</strong> 即可找到你的账号的cookie，简单方便</p><p>然后回到青龙面板，选择 <strong>环境变量→新建变量</strong> ，名称为 <strong>JD_COOKIE</strong> ，值为刚复制的Cookie，自动拆分保持为<strong>是</strong>。点击确定，添加完毕。</p><p><strong>Tips:</strong></p><blockquote><ul><li><p>多账号只需要在值里面换行输入下一个Cookie，不需要再创建一个变量;</p></li><li><p>Cookie值只需要其中的 <em>pt_key</em> 与 <em>pt_pin</em> 就可以了，不懂的话全部复制粘贴上去也没问题;</p></li><li><p>不要频繁的去执行任务，避免黑号;</p></li><li><p>京东账号建议绑定微信，活动抽奖抽到微信红包会自动提现到微信钱包;</p></li><li><p>根据脚本提示开通需要的小游戏、活动，需要安装京东，京东极速版，京喜。</p></li></ul></blockquote><h3 id="六、一些依赖可供参考"><a href="#六、一些依赖可供参考" class="headerlink" title="六、一些依赖可供参考"></a>六、一些依赖可供参考</h3><p>一些任务需要安装依赖才能跑的动，青龙面板里的 <strong>依赖管理</strong> 功能可以直接安装，将以下所有依赖添加安装即可</p><p><strong>1.NodeJs下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">crypto-js<br>prettytable<br>dotenv<br>jsdom<br>date-fns<br>tough-cookie<br>tslib<br>ws@7.4.3<br>ts-md5<br>jsdom -g<br>jieba<br>fs<br>form-data<br>json5<br>global-agent<br>png-js<br>@types/node<br>require<br>typescript<br>js-base64<br>axios<br></code></pre></td></tr></table></figure><p><strong>2.Python3下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">requests<br>canvas<br>ping3<br>jieba<br></code></pre></td></tr></table></figure><p><strong>3.Linux下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bizCode<br>bizMsg<br>lxml<br></code></pre></td></tr></table></figure><h3 id="七、更换默认端口"><a href="#七、更换默认端口" class="headerlink" title="七、更换默认端口"></a>七、更换默认端口</h3><p><strong>1、执行命令，查询容器ID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/jag21s"><img src="https://s1.ax1x.com/2022/07/06/jag21s.png" alt="jag21s.png"></a></p><p><strong>2、停用docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop docker<br></code></pre></td></tr></table></figure><p><strong>3、然后根据路径找到这个ID，docker路径为&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers</strong></p><p><a href="https://imgtu.com/i/jagRcn"><img src="https://s1.ax1x.com/2022/07/06/jagRcn.png" alt="jagRcn.png"></a></p><p><strong>4、进入容器文件夹，找到hostconfig.json</strong></p><p><a href="https://imgtu.com/i/jagoAU"><img src="https://s1.ax1x.com/2022/07/06/jagoAU.png" alt="jagoAU.png"></a></p><p><strong>5、</strong></p><p><strong>双击打开文件，修改端口号，将选中的地方将端口号修改，然后ctrl+s保存即可</strong></p><p><a href="https://imgtu.com/i/ja2JbV"><img src="https://s1.ax1x.com/2022/07/06/ja2JbV.md.png" alt="ja2JbV.md.png"></a></p><p><strong>shell修改：vim打开该文件，修改端口号，将蓝色框内端口号修改，然后:wq!保存即可</strong></p><p><a href="https://imgtu.com/i/ja2kjI"><img src="https://s1.ax1x.com/2022/07/06/ja2kjI.md.png" alt="ja2kjI.md.png"></a></p><p> <strong>6、重启docker 和服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动docker</span><br>systemctl start docker<br><br><span class="hljs-comment">#启动青龙</span><br>docker start qinglong <span class="hljs-comment">#容器ID</span><br></code></pre></td></tr></table></figure><h3 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h3><p>感谢以下几位，文章内容主要借鉴他们：</p><p><a href="https://vccv.cc/article/qinglong-jd.html">https://vccv.cc/article/qinglong-jd.html</a></p><p><a href="https://blog.csdn.net/qq_41846013/article/details/122585183">https://blog.csdn.net/qq_41846013/article/details/122585183</a></p><p><a href="https://blog.csdn.net/Magic_Zsir/article/details/124201351">https://blog.csdn.net/Magic_Zsir/article/details/124201351</a></p><p><a href="https://blog.csdn.net/sinat_39613288/article/details/122460430">https://blog.csdn.net/sinat_39613288/article/details/122460430</a></p><p>最后简单分享波收益吧，无非就是薅点小羊毛罢了，合理利用服务器闲置资源何乐而不为呢。</p><p>两个号一起一个月的京豆大概二十块吧，加上jd农场种植会送实物，还有极速版的金币也有二十，挺可观的。</p><p><a href="https://imgtu.com/i/ja6orV"><img src="https://s1.ax1x.com/2022/07/06/ja6orV.jpg" alt="ja6orV.jpg" style="zoom: 33%;" /></a><br><a href="https://imgtu.com/i/ja6IK0"><img src="https://s1.ax1x.com/2022/07/06/ja6IK0.jpg" alt="ja6IK0.jpg" style="zoom:33%;" /></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github pages 搭建个人博客</title>
    <link href="/2022/07/01/PesrsonalBlogInstall/"/>
    <url>/2022/07/01/PesrsonalBlogInstall/</url>
    
    <content type="html"><![CDATA[<h3 id="一、主要工具简介"><a href="#一、主要工具简介" class="headerlink" title="一、主要工具简介"></a>一、主要工具简介</h3><p><strong>1.1、GitHub Pages</strong></p><p>GitHub推出的免费功能，它允许用户的任何一个Repo的gh-pages分支上的代码可以经由HTTP访问到。类似提供了静态文件服务。你可以用Github Pages搭建博客，也可以把项目的文档和主页放在上面。请注意，善待Github资源！</p><p><strong>1.2、git(主要使用git bash)。</strong></p><p>git–程序员的时光机，保存文件，为你随时恢复你想要的版本。<br>本次搭建博客过程中使用git进行版本控制，并将本地仓库托管到GitHub进行管理。</p><p><strong>1.3、Node.js(主要使用其工具npm下载hexo)</strong></p><p>Node.js 就是运行在服务端的 JavaScript，Node.js 的包管理器 npm，是全球最大的开源库生态系统。<br>npm相当于软件管家，搜索、下载和删除包。</p><p><strong>1.4、Hexo</strong></p><p>Hexo是一个基于nodejs 的静态博客网站生成器。</p><h3 id="二、大致流程"><a href="#二、大致流程" class="headerlink" title="二、大致流程"></a>二、大致流程</h3><p>2.1、进行环境配置，在本地安装git、Node.js和hexo;</p><p>2.2、使用hexo本地编辑文章并实现本地预览；</p><p>2.3、注册<a href="https://github.com/">GitHub</a>账户并创建远程仓库；</p><p>2.4、使用git bash部署到GitHub供人浏览观看；</p><p>2.5、主题美化。</p><h3 id="三、安装步骤"><a href="#三、安装步骤" class="headerlink" title="三、安装步骤"></a>三、安装步骤</h3><p><strong>3.1、安装git</strong></p><p>官网地址：<a href="https://gitforwindows.org/">下载安装</a></p><p><strong>3.2、安装Node.js</strong></p><p>Node.js中文官网地址：<a href="https://nodejs.org/zh-cn/">下载安装</a></p><p>①安装后，在nodejs安装文件夹下新建两个空白文件夹【node_global】【node_cache】</p><p>②创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;D:\Environment\nodejs\node_global&quot;</span>  //设置使用npm全局安装时下载文件的位置<br>npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;D:\Environment\nodejs\node_cache&quot;</span>    //设置缓存位置<br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org/   //更换镜像源，加快下载速度<br>npm config list                                            //显示配置信息<br></code></pre></td></tr></table></figure><blockquote><p>以下两步可以选择不做，为优化下载位置的操作。</p></blockquote><p>③在【系统变量】下新建【NODE_PATH】，输入【D:\Program Files\nodejs\node_global\node_modules】&#x2F;&#x2F;设置下载位置</p><p>使用 npm -g 安装的时候，默认的模块D:\Program Files\nodejs\node_modules 目录将会改变为D:\Program Files\nodejs\node_global\node_modules目录</p><p>④将【系统变量】下的【Path】添加【D:\Program Files\nodejs\node_global】</p><blockquote><p>否则可能报错：‘vue’不是内部或外部命令，也不是可运行的程序或批处理文件。</p></blockquote></br><p><strong>3.3、安装hexo</strong></p><p>①安装核心框架hexo-cli，在cmd下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><p>②创建一个文件夹用于存放hexo，然后右键该文件夹使用Git bash here，意思是直接在此目录下打开Git命令行工具，之后我们只用指令生成的hexo文件就会直接存放在这个文件夹内。</p><p>③安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo --save<br></code></pre></td></tr></table></figure><p>④检查安装是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>⑤在新建文件夹下使用git bash here初始化hexo，这一步会生成hexo默认文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>⑥现在已经可以部署本地静态页面了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean <br>hexo g //生成Hexo页面<br>hexo s //启动服务<br></code></pre></td></tr></table></figure><p>本地浏览器访问<strong>localhost:4000</strong>就可以看到你的hexo博客初始化界面了。</p><h3 id="四、本地撰写文章并预览"><a href="#四、本地撰写文章并预览" class="headerlink" title="四、本地撰写文章并预览"></a>四、本地撰写文章并预览</h3><p><strong>4.1、新建文章</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">&#x27;我的第一篇文章&#x27;</span> //自定义文章标题<br></code></pre></td></tr></table></figure></br><p><strong>4.2、编辑文章</strong></p><p>hexo会自动生成一个md文件，可以自由的编辑你的md内容了</p><p>头部文件如下，可以修改基本的文章参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: postName <span class="hljs-comment">#文章页面上的显示名称</span><br><span class="hljs-built_in">date</span>: 2022-07-01 10:00:16 <span class="hljs-comment">#文章生成时间，一般不改，当然也可以任意修改</span><br>categories: 默认分类 <span class="hljs-comment">#分类</span><br>tags: [tag1,tag2,tag3] <span class="hljs-comment">#文章标签，可空，多标签请用格式，注意冒号:后面有个空格</span><br>description: 摘要<br>---<br></code></pre></td></tr></table></figure></br><p><strong>4.3、一键预览静态页面</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><h3 id="五、部署至github-pages"><a href="#五、部署至github-pages" class="headerlink" title="五、部署至github pages"></a>五、部署至github pages</h3><p>①注册github账号</p><p>在github上创建并设置个人远程库，注册登录略过，不会的请自行百度。这里有一点必须注意，存储库名称必须为<code>用户名.github.io</code></p><p>然后打开Git Bash<strong>设置用户</strong>。目的时告诉远程仓库谁上传的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;GitHub的用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;注册GitHub使用的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后通过下面代码即可查看用户信息配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global --list<br></code></pre></td></tr></table></figure><p>②git bash下生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;XXXXXXXXX@XXX.com&quot;</span><br></code></pre></td></tr></table></figure><p>③查看<code>id_rsa.pub</code>文件，并全部复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>④在<code>Github个人设置</code>中添加<code>ssh key</code></p><p><a href="https://imgtu.com/i/jMHEFA"><img src="https://s1.ax1x.com/2022/07/01/jMHEFA.png" alt="jMHEFA.png"></a></p><p>⑤修改hexo根目录下的文件<code>_config.yml</code>中的deploy，<strong>请将用户名修改为自己的用户名</strong>。注意自己的github的hexo项目主分支名称，一般是main或者master。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br> <span class="hljs-built_in">type</span>: git<br> repo: git@github.com:yvoncosmic/yvoncosmic.github.io.git<br> branch: main<br></code></pre></td></tr></table></figure><p>⑥部署至github pages，一键推送命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>⑦查看blog：<a href="https://yvoncosmic.github.io/">https://yvoncosmic.github.io</a></p><p>⑧依次执行以下命令提交网站相关的文件（hexo存放网站的原始文件）</p><p>hexo为github副分支，有别于main主分支，我用来存放hexo源文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&quot;init&quot;</span><br>git push origin hexo<br></code></pre></td></tr></table></figure><h3 id="六、博客美化"><a href="#六、博客美化" class="headerlink" title="六、博客美化"></a>六、博客美化</h3><p><strong>6.1、主题安装</strong></p><p>选用了一款 Material Design 风格的主题Fluid，官方Github页面：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>根据用户文档安装即可</p></br><p><strong>6.2、添加鼠标点击效果</strong></p><p>这是一个点击鼠标显示红心并浮现社会主义核心价值观的效果，挺有意思。<a href="https://blog.51cto.com/u_13640625/3033188">参考文章</a></p><p>①添加love-click.js放在..&#x2F;hexo&#x2F;themes&#x2F;next&#x2F;source&#x2F;js&#x2F;目录下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 爱心特效 */</span><br><br>!<span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, a</span>) &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; s.<span class="hljs-property">length</span>; e++) s[e].<span class="hljs-property">alpha</span> &lt;= <span class="hljs-number">0</span> ? (t.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(s[e].<span class="hljs-property">el</span>), s.<span class="hljs-title function_">splice</span>(e, <span class="hljs-number">1</span>)) : (s[e].<span class="hljs-property">y</span>--, s[e].<span class="hljs-property">scale</span> += <span class="hljs-number">.004</span>, s[e].<span class="hljs-property">alpha</span> -= <span class="hljs-number">.013</span>, s[e].<span class="hljs-property">el</span>.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;left:&quot;</span> + s[e].<span class="hljs-property">x</span> + <span class="hljs-string">&quot;px;top:&quot;</span> + s[e].<span class="hljs-property">y</span> + <span class="hljs-string">&quot;px;opacity:&quot;</span> + s[e].<span class="hljs-property">alpha</span> + <span class="hljs-string">&quot;;transform:scale(&quot;</span> + s[e].<span class="hljs-property">scale</span> + <span class="hljs-string">&quot;,&quot;</span> + s[e].<span class="hljs-property">scale</span> + <span class="hljs-string">&quot;) rotate(45deg);background:&quot;</span> + s[e].<span class="hljs-property">color</span> + <span class="hljs-string">&quot;;z-index:99999&quot;</span>);<br>    <span class="hljs-title function_">requestAnimationFrame</span>(r)<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;function&quot;</span> == <span class="hljs-keyword">typeof</span> e.<span class="hljs-property">onclick</span> &amp;&amp; e.<span class="hljs-property">onclick</span>;<br>    e.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>      t &amp;&amp; <span class="hljs-title function_">t</span>(), <span class="hljs-title function_">o</span>(e)<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>    a.<span class="hljs-property">className</span> = <span class="hljs-string">&quot;heart&quot;</span>, s.<span class="hljs-title function_">push</span>(&#123;<br>      <span class="hljs-attr">el</span>: a,<br>      <span class="hljs-attr">x</span>: e.<span class="hljs-property">clientX</span> - <span class="hljs-number">5</span>,<br>      <span class="hljs-attr">y</span>: e.<span class="hljs-property">clientY</span> - <span class="hljs-number">5</span>,<br>      <span class="hljs-attr">scale</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">alpha</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">color</span>: <span class="hljs-title function_">c</span>()<br>    &#125;), t.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a)<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;style&quot;</span>);<br>    a.<span class="hljs-property">type</span> = <span class="hljs-string">&quot;text/css&quot;</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>      a.<span class="hljs-title function_">appendChild</span>(t.<span class="hljs-title function_">createTextNode</span>(e))<br>    &#125; <span class="hljs-keyword">catch</span> (t) &#123;<br>      a.<span class="hljs-property">styleSheet</span>.<span class="hljs-property">cssText</span> = e<br>    &#125;<br>    t.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(a)<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;rgb(&quot;</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;,&quot;</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;,&quot;</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;)&quot;</span><br>  &#125;<br>  <span class="hljs-keyword">var</span> s = [];<br>  e.<span class="hljs-property">requestAnimationFrame</span> = e.<span class="hljs-property">requestAnimationFrame</span> || e.<span class="hljs-property">webkitRequestAnimationFrame</span> || e.<span class="hljs-property">mozRequestAnimationFrame</span> || e.<span class="hljs-property">oRequestAnimationFrame</span> || e.<span class="hljs-property">msRequestAnimationFrame</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(e, <span class="hljs-number">1e3</span> / <span class="hljs-number">60</span>)<br>  &#125;, <span class="hljs-title function_">i</span>(<span class="hljs-string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>), <span class="hljs-title function_">n</span>(), <span class="hljs-title function_">r</span>()<br>&#125;(<span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span>);<br><br><span class="hljs-comment">/* 社会主体核心价值观效果 */</span><br><span class="hljs-keyword">var</span> a_idx = <span class="hljs-number">0</span>;<br><span class="hljs-title function_">jQuery</span>(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">$</span>) &#123;<br>  $(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;富强&quot;</span>, <span class="hljs-string">&quot;民主&quot;</span>, <span class="hljs-string">&quot;文明&quot;</span>, <span class="hljs-string">&quot;和谐&quot;</span>, <span class="hljs-string">&quot;自由&quot;</span>, <span class="hljs-string">&quot;平等&quot;</span>, <span class="hljs-string">&quot;公正&quot;</span>, <span class="hljs-string">&quot;法治&quot;</span>, <span class="hljs-string">&quot;爱国&quot;</span>, <span class="hljs-string">&quot;敬业&quot;</span>, <span class="hljs-string">&quot;诚信&quot;</span>, <span class="hljs-string">&quot;友善&quot;</span>);<br>    <span class="hljs-keyword">var</span> $i = $(<span class="hljs-string">&quot;&lt;span/&gt;&quot;</span>).<span class="hljs-title function_">text</span>(a[a_idx]);<br>    a_idx = (a_idx + <span class="hljs-number">1</span>) % a.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">var</span> x = e.<span class="hljs-property">pageX</span>,<br>      y = e.<span class="hljs-property">pageY</span>;<br>    $i.<span class="hljs-title function_">css</span>(&#123;<br>      <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-number">100000000</span>,<br>      <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">20</span>,<br>      <span class="hljs-string">&quot;left&quot;</span>: x,<br>      <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>      <span class="hljs-string">&quot;font-weight&quot;</span>: <span class="hljs-string">&quot;bold&quot;</span>,<br>      <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;#ff6651&quot;</span><br>    &#125;);<br>    $(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">append</span>($i);<br>    $i.<span class="hljs-title function_">animate</span>(&#123;<br>      <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">180</span>,<br>      <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span><br>    &#125;, <span class="hljs-number">1500</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      $i.<span class="hljs-title function_">remove</span>();<br>    &#125;);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p>②修改我们的Fluid主题配置文件<code>_config.fluid.yml</code>，调用该js文件即可，向文件中<code>custom_js</code>参数中添加如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">custom_js</span>: - <span class="hljs-regexp">/js/</span>love-click.<span class="hljs-property">js</span> # 鼠标点击特效<br></code></pre></td></tr></table></figure><p>注意：如果有多个js文件需要调用，那么需要隔行逐一添加，这个是用户文档要求的，不仔细看容易踩坑。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">custom_js</span>: <br>  - <span class="hljs-regexp">/js/</span>love-click.<span class="hljs-property">js</span> # 鼠标点击特效<br>  - <span class="hljs-regexp">/js/</span>snow.<span class="hljs-property">js</span> #雪花<br></code></pre></td></tr></table></figure></br><p><strong>6.3、背景添加动态线条</strong></p><p>这是一个我很喜欢的特效，线条会慢慢向你的鼠标指向位置聚拢。<a href="https://cloud.tencent.com/developer/article/1943700">参考文章</a></p><p>像上一步一样，主题配置文件允许你直接调用js文件的url链接，那么我们直接像这样添加一个url，调用它即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">custom_js</span>: <br>  - <span class="hljs-regexp">/js/</span>love-click.<span class="hljs-property">js</span> # 鼠标点击特效<br>  - <span class="hljs-regexp">/js/</span>snow.<span class="hljs-property">js</span> #雪花<br>  - <span class="hljs-comment">//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js # 背景动态线条</span><br></code></pre></td></tr></table></figure></br><p><strong>6.4、底部网站运行时间</strong></p><p>找到<code>D:\hexo\themes\fluid\layout\_partials</code>下的<code>footer.ejs</code>文件</p><p>直接在div盒子里添加如下代码，<a href="https://blog.csdn.net/qq_39720594/article/details/105411030">参考文章</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 运行时间 --&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sitetime&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">javascript</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">function</span> <span class="hljs-title function_">siteTime</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&quot;siteTime()&quot;</span>, <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> seconds = <span class="hljs-number">1000</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> minutes = seconds * <span class="hljs-number">60</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> hours = minutes * <span class="hljs-number">60</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> days = hours * <span class="hljs-number">24</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> years = days * <span class="hljs-number">365</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> today = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todayYear = today.<span class="hljs-title function_">getFullYear</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todayMonth = today.<span class="hljs-title function_">getMonth</span>()+<span class="hljs-number">1</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todayDate = today.<span class="hljs-title function_">getDate</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todayHour = today.<span class="hljs-title function_">getHours</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todayMinute = today.<span class="hljs-title function_">getMinutes</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> todaySecond = today.<span class="hljs-title function_">getSeconds</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">/* </span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    year - 作为date对象的年份，为4位年份值</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    month - 0-11之间的整数，做为date对象的月份</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    day - 1-31之间的整数，做为date对象的天数</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    seconds - 0-59之间的整数，做为date对象的秒数</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">    microseconds - 0-999之间的整数，做为date对象的毫秒数</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">        */</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> t1 = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">UTC</span>(<span class="hljs-number">2021</span>,<span class="hljs-number">12</span>,<span class="hljs-number">16</span>,<span class="hljs-number">22</span>,<span class="hljs-number">30</span>,<span class="hljs-number">00</span>); <span class="hljs-comment">//北京时间</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> t2 = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">UTC</span>(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diff = t2-t1;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diffYears = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff/years);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diffDays = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff/days)-diffYears*<span class="hljs-number">365</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diffHours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff-(diffYears*<span class="hljs-number">365</span>+diffDays)*days)/hours);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diffMinutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff-(diffYears*<span class="hljs-number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> diffSeconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff-(diffYears*<span class="hljs-number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;sitetime&quot;</span>).<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot; 已运行&quot;</span>+<span class="hljs-comment">/*diffYears+&quot; 年 &quot;+*/</span>diffDays+<span class="hljs-string">&quot; 天 &quot;</span>+diffHours+<span class="hljs-string">&quot; 小时 &quot;</span>+diffMinutes+<span class="hljs-string">&quot; 分钟 &quot;</span>+diffSeconds+<span class="hljs-string">&quot; 秒&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">siteTime</span>();</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的世界Spigot1.18简易部署流程</title>
    <link href="/2022/06/26/MinecraftSpigot1.18ServeInstall/"/>
    <url>/2022/06/26/MinecraftSpigot1.18ServeInstall/</url>
    
    <content type="html"><![CDATA[<h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><p>1、Java环境，MC不同的版本也有对应不同的java版本，例如这里的使用的spigot1.18需要java17</p><p>2、服务端核心，下载地址<a href="https://getbukkit.org/download/spigot">https://getbukkit.org/download/spigot</a></p><h3 id="二、部署过程"><a href="#二、部署过程" class="headerlink" title="二、部署过程"></a>二、部署过程</h3><p>1、将上一步得到的核心文件spigot-1.xx.jar，上传至你的服务器目录运行即可。</p><p>注意：运行后会生成很多服务端文件，所以可以新建一个文件夹用于存放服务端文件。</p><p><a href="https://imgtu.com/i/jA4v9I"><img src="https://s1.ax1x.com/2022/06/26/jA4v9I.png" alt="jA4v9I.png"></a></p><p>2、在服务端目录下运行以下指令，其中“spigot-1.18.jar”请自行更换为自己的核心名称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -Xmx1024M -Xms1024M -jar spigot-1.18.jar nogui<br></code></pre></td></tr></table></figure><ul><li><strong>-Xms</strong> 是指程序启动时初始内存大小（此值可以设置成与-Xmx相同，以避免每次GC完成后 JVM 内存重新分配）。</li><li><strong>-Xmx</strong> 指程序运行时最大可用内存大小，程序运行中内存大于这个值会 OutOfMemory。</li></ul><p>3、首次运行核心文件，会提示你同意本地目录下生成的一份用户协议文件，我们通过vim编辑它即可。</p><p><a href="https://imgtu.com/i/jA4ONd"><img src="https://s1.ax1x.com/2022/06/26/jA4ONd.md.png" alt="jA4ONd.md.png"></a></p><p>通过<code>vim eula.txt</code>修改eula该项的值为true即可，完成后ESC→:wq保存退出即可，再次运行java指令就会生成所有的游戏服务端文件，包括地图等等。</p><p>5、经过漫长的等待后，出现下面的画面即为开服成功。</p><p><a href="https://imgtu.com/i/jA47nO"><img src="https://s1.ax1x.com/2022/06/26/jA47nO.png" alt="jA47nO.png"></a></p><p>6、请到安全组&#x2F;防火墙开放25565我的世界默认联机端口！</p><blockquote><p>TCP: 25565</p></blockquote><p>7、关闭正版认证</p><p>如果需要关闭正版认证，请编辑目录下server.properties中<code>online-mode=false</code>，不然盗版用户将无法进入！</p><h3 id="三、使用MCSManager托管你的服务器，"><a href="#三、使用MCSManager托管你的服务器，" class="headerlink" title="三、使用MCSManager托管你的服务器，"></a>三、使用MCSManager托管你的服务器，</h3><p>如果你想将你的服务进程运行在xshell的话，请使用screen挂起。</p><p>或者使用一种操作更方便，更快捷，免费的管理面板MCSM: <a href="https://mcsmanager.com/">https://mcsmanager.com/</a></p><p>它适用于主流 Linux 系统，安装成功后，使用 systemctl start mcsm-{web, daemon} 命令即可启动。你只需要执行以下命令，即可完成MCSM的快速安装。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -qO- https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/mcsmanager/</span>script<span class="hljs-regexp">/raw/m</span>aster/setup.sh | bash<br></code></pre></td></tr></table></figure><p>安装完成后如图所示，使用 http:&#x2F;&#x2F;你的ip地址:23333 即可连接面板。之后对于服务器的启停操作，监控，文件管理会十分方便。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/26/f2b834f0d4842a4c.png"></p><p>同样的，需放行端口23333(面板web服务)，24444(守护进程)</p><blockquote><p>TCP:23333</p><p>TCP:24444</p></blockquote><p>相关MCSM服务指令</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">重启 systemctl restart mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">禁用 systemctl disable mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">启用 systemctl enable mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">启动 systemctl start mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">停止 systemctl stop mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br></code></pre></td></tr></table></figure><p>更多使用说明，请参考：<a href="https://docs.mcsmanager.com/">https://docs.mcsmanager.com</a></p><h3 id="四、连接至服务器"><a href="#四、连接至服务器" class="headerlink" title="四、连接至服务器"></a>四、连接至服务器</h3><p>客户端，多人游戏，填入ip地址，完成连接。</p><p>请同时告知你的小伙伴一起游玩吧~</p><p><a href="https://imgtu.com/i/jA4x3t"><img src="https://s1.ax1x.com/2022/06/26/jA4x3t.png" alt="jA4x3t.png"></a></p><p><a href="https://imgtu.com/i/jA4VOO"><img src="https://s1.ax1x.com/2022/06/26/jA4VOO.png" alt="jA4VOO.png"></a></p><h3 id="五、补充"><a href="#五、补充" class="headerlink" title="五、补充"></a>五、补充</h3><p>2022&#x2F;7&#x2F;22 </p><p>整了个新机器，在MCSManager尝试启动spigot1.18服务端时失败，在ssh启动却没有问题，其中MCSM报错：</p><p><code>[MCSMANAGER-PTY] Process Start Error:exec: &quot;java&quot;: executable file not found in $PATH</code></p><p><code>[MCSMANAGER] [ERROR] 检测到实例启动后在极短的时间内退出，原因可能是您的启动命令错误或配置文件错误。</code></p><p>解决方法：安装java SDK 17即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt install openjdk-<span class="hljs-number">17</span>-jdk<br></code></pre></td></tr></table></figure><p>安装后就可以正常运行了，原理未知?_?</p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装java17流程</title>
    <link href="/2022/06/26/LinuxJava17Install/"/>
    <url>/2022/06/26/LinuxJava17Install/</url>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>最近心血来潮想在ECS上架设MC服务器和小伙伴一起玩耍回味童年的味道，那么就必须要安装java环境。</p><p>Java版本后缀眼花缭乱，到底该安装哪个才能运行我的世界核心包，就是那个.jar的文件？</p><p>首先需了解以下几个概念，这个问题就很好解决了：</p><blockquote><ul><li><p>JDK(Java Development Kit)Java开发工具：包含：包含JRE，以及增加编译器和调试器等用于程序开发的文件。</p></li><li><p>JRE(Java Runtime Environment)Java环境：包含：Java虚拟机、库函数、运行Java应用程序所必须的文件。</p></li><li><p>JVM(Java Vitrual Machine)Java虚拟机：JVM就是一个虚拟的用于执行bytecode字节码的“虚拟计算机。</p></li></ul></blockquote><p>jdk是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。jdk是整个java开发的核心，它包含了JAVA的运行环境，JAVA工具和JAVA</p><p>基础的类库。</p><p>就单独看名字也知道jdk最大，其次是jre，最后是jvm，jdk是java开发需要的工具包，它包括了jre，而jre是java程序运行时需要的运行环境，它包含了jvm，而jvm是java<a href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E6%9C%BA&spm=1001.2101.3001.7020">虚拟机</a>，通过jvm编译字节码。</p><p><strong>总结，虽然不是很懂，但是直接JDK版就完事了</strong></p><h2 id="二、安装过程"><a href="#二、安装过程" class="headerlink" title="二、安装过程"></a>二、安装过程</h2><h3 id="2-1-Linux-手动安装Java17"><a href="#2-1-Linux-手动安装Java17" class="headerlink" title="2.1 Linux 手动安装Java17"></a>2.1 Linux 手动安装Java17</h3><p>1、下载安装包</p><p><code>wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz</code></p><p>java17和java8一样，都是LTS长期支持版本，因此这里直接下载java17</p><p>2、解压安装包，修改自动下载的包名为jdk-17，注意包的名称，可能会有版本更迭。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar zxf jdk-17_linux-x64_bin.tar.gz<br><span class="hljs-built_in">rm</span> -rf jdk-17_linux-x64_bin.tar.gz<br><span class="hljs-built_in">mv</span> jdk-17.0.3.1 jdk-17<br></code></pre></td></tr></table></figure><p>3、移动文件夹到&#x2F;opt下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> jdk-17 /opt<br></code></pre></td></tr></table></figure><p>4、将java添加到环境变量末尾</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/profile<br></code></pre></td></tr></table></figure><p>centos7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/opt/jdk-17<br><span class="hljs-built_in">export</span> PATH=/opt/php/bin:/usr/local/jdk-17/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>ubuntu20.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">JAVA_HOME=/opt/jdk-17<br>PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> JAVA_HOME PATH<br></code></pre></td></tr></table></figure><p>5、重新加载环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>6、验证java是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><p>显示下面内容，说明安装成功</p><blockquote><p>java version “17” 2021-09-14 LTS<br>Java(TM) SE Runtime Environment (build 17+35-LTS-2724)<br>Java HotSpot(TM) 64-Bit Server VM (build 17+35-LTS-2724, mixed mode, sharing)</p></blockquote><h3 id="2-2-Linux自动安装Java17"><a href="#2-2-Linux自动安装Java17" class="headerlink" title="2.2 Linux自动安装Java17"></a>2.2 Linux自动安装Java17</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install openjdk-17-jdk<br></code></pre></td></tr></table></figure><p>出现如下输出即为安装成功</p><blockquote><p>root@iZbp1gqpip1640l5lh3uynZ:~# java -version<br>openjdk version “17.0.3” 2022-04-19<br>OpenJDK Runtime Environment (build 17.0.3+7-Ubuntu-0ubuntu0.20.04.1)<br>OpenJDK 64-Bit Server VM (build 17.0.3+7-Ubuntu-0ubuntu0.20.04.1, mixed mode, sharing)</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Teamspeak3服务端简易部署</title>
    <link href="/2022/06/24/TeamSpeak3/"/>
    <url>/2022/06/24/TeamSpeak3/</url>
    
    <content type="html"><![CDATA[<p>最近腾讯云618活动，入手了一台轻量应用服务器，新人首单价格还行，配置如图。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/5380d996a801d111.png"></p><p>参与买赠活动有两个福利可以选择其中一个：1.使用一个4C8G的服务器一个月 2.续费你的订单服务器一个月。我选择了后者，我觉得只是试用的话那还是算了，不如续杯。</p><p>正好拿来与小伙伴测试下传说的职业哥用的交流软件Teamspeak3，个人的部署流程如下</p><h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><p>1、ECS云服务器一台，我的系统是Ubuntu Server 20.04 LTS 64bit，其它大同小异</p><p>2、Teamspeak官网下载对应的服务端文件：<a href="https://www.teamspeak.com/en/downloads/#server">https://www.teamspeak.com/en/downloads/#server</a></p><p>Teamspeak客户端：<a href="https://www.teamspeak.com/en/downloads/#client">https://www.teamspeak.com/en/downloads/#client</a> (需自行汉化)</p><p>Teamspeak汉化客户端(盗版)：<a href="http://www.ts1.cn/download">http://www.ts1.cn/download</a></p><p>3、Xshell，Xftp或者其它命令行工具以及FTP工具</p><h3 id="二、部署服务端"><a href="#二、部署服务端" class="headerlink" title="二、部署服务端"></a>二、部署服务端</h3><p>将上步 2 中得到的服务端压缩包解压缩后用Xftp直接上传你的服务器目录，文件夹我命名为teamspeak3，方便命令行检索。</p><p>(个人习惯用root账户以及root根目录，虽然很多地方都强调建议用普通用户运行，可能是我还没吃到亏2333)</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/8fa36299d6d57ca0.png"></p><p>在终端中进入该文件夹，给予sh脚本运行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 777 ts3server_startscript.sh<br></code></pre></td></tr></table></figure><p>启动服务之前，你还需要同意一份用户协议，我们直接执行该指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> .ts3server_license_accepted<br></code></pre></td></tr></table></figure><p>启动服务，这一步我直接用root用户运行了，尽管它会发出警告。建议懂得用户权限系统的运行在普通用户下即可，我是弄不明白。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ts3server_startscript.sh start<br></code></pre></td></tr></table></figure><p>接着会给你登录账号和密码，以及一枚权限密钥token，这个密钥是最重要的请保存下来，一会登录服务器要用。</p><p>有且只能使用一次来确定服务器管理员身份。后续有需要的话请使用客户端生成新的密钥，以防更换电脑带来的权限丢失。</p><h3 id="三、放行端口"><a href="#三、放行端口" class="headerlink" title="三、放行端口"></a>三、放行端口</h3><p>记得在服务商或者终端放行服务需要的端口，ts3需要的端口是</p><blockquote><p>UDP: 9987</p><p>TCP: 10011</p><p>TCP: 30033</p></blockquote><p>到这一步，服务端的部署基本就完成了，此时ts3就可以连上你的私人语言频道了，在客户端左上角连接里填入你的服务器ip或者域名(多一步解析)以及上一步中终端给你的信息即可。快和小伙伴畅享高质量，无延迟的语言交流吧。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/747808fadc3cc5d2.png"></p><h3 id="四、设置开机自启"><a href="#四、设置开机自启" class="headerlink" title="四、设置开机自启"></a>四、设置开机自启</h3><p>服务运行后，是没有开机自启的。如果遇到平时重启，主机崩溃之类的还要手动运行较麻烦。可以相应设置一个开机自启的脚本，灵活应对重启状况。</p><p>第一步，切换到root用户下，用su指令即可</p><p>第二步，在系统服务文件下新建一个teamspeak.service文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /lib/systemd/system/teamspeak.service<br></code></pre></td></tr></table></figure><p>第三步，进入插入模式，向文本添加以下内容。注意所有涉及路径的地方请根据个人情况自行修改，否则将无法运行。<br>“&#x2F;root&#x2F;teamspeak3”为我的安装路径</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Teamspeak server<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">WorkingDirectory</span>=/root/teamspeak3<br><span class="hljs-attr">User</span>=teamspeak<br><span class="hljs-attr">Group</span>=teamspeak<br><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">ExecStart</span>=/root/teamspeak3/ts3server_startscript.sh start<br><span class="hljs-attr">Inifile</span>=ts3server.ini<br><span class="hljs-attr">ExecStop</span>=/root/teamspeak3/ts3server_startscript.sh stop<br><span class="hljs-attr">PIDFile</span>=/root/teamspeak3/ts3server.pid<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">15</span><br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>第四步，重新加载服务配置文件，使新服务的服务程序配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br></code></pre></td></tr></table></figure><p>第五步，设置开启服务自启动即可，因为此时teamspeak已经在运行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> teamspeak.service<br></code></pre></td></tr></table></figure><p>附上三条启停的指令</p><p>1.启动 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start teamspeak.serviceb<br></code></pre></td></tr></table></figure><p>2.停止 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop teamspeak.service<br></code></pre></td></tr></table></figure><p>3.重启 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart teamspeak.serviceb<br></code></pre></td></tr></table></figure><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>个人觉得还是比yy好用不少的，主要体现在以下几点：更少的资源暂用，语音感应激活（更少收录队友杂音），启动速度更快，无开屏弹窗广告纵享丝滑。</p><p>当然如果你单纯只为了架ts3而购买服务器是大可不必的，和小伙伴一顿使用下来没浪费多少多少服务器资源，静置状态只有2%的内存占用，相当于40M？？可以说真的很轻量了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>害行的一次海底捞</title>
    <link href="/2021/12/16/goodhdl/"/>
    <url>/2021/12/16/goodhdl/</url>
    
    <content type="html"><![CDATA[<p>昨天吃了海底捞。两个人334，加上100一张的200元代金券，实付234.</p><p>我焯，挺辣的嗷</p><p>搞得今天皮燕子都有点辣。还以为是痔疮。</p><p><a href="https://imgtu.com/i/jA5aDO"><img src="https://s1.ax1x.com/2022/06/26/jA5aDO.jpg" alt="jA5aDO.jpg"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>小食谈记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
