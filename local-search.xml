<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo+github page搭建个人博客</title>
    <link href="/2022/07/01/hexo+github/"/>
    <url>/2022/07/01/hexo+github/</url>
    
    <content type="html"><![CDATA[<h3 id="一、主要工具简介"><a href="#一、主要工具简介" class="headerlink" title="一、主要工具简介"></a>一、主要工具简介</h3><p><strong>1.1、GitHub Pages</strong></p><p>GitHub推出的免费功能，它允许用户的任何一个Repo的gh-pages分支上的代码可以经由HTTP访问到。类似提供了静态文件服务。你可以用Github Pages搭建博客，也可以把项目的文档和主页放在上面。请注意，善待Github资源！</p><p><strong>1.2、git(主要使用git bash)。</strong></p><p>git–程序员的时光机，保存文件，为你随时恢复你想要的版本。<br>本次搭建博客过程中使用git进行版本控制，并将本地仓库托管到GitHub进行管理。</p><p><strong>1.3、Node.js(主要使用其工具npm下载hexo)</strong></p><p>Node.js 就是运行在服务端的 JavaScript，Node.js 的包管理器 npm，是全球最大的开源库生态系统。<br>npm相当于软件管家，搜索、下载和删除包。</p><p><strong>1.4、Hexo</strong></p><p>Hexo是一个基于nodejs 的静态博客网站生成器。</p><h3 id="二、大致流程"><a href="#二、大致流程" class="headerlink" title="二、大致流程"></a>二、大致流程</h3><p>2.1、进行环境配置，在本地安装git、Node.js和hexo;</p><p>2.2、注册<a href="https://so.csdn.net/so/search?q=GitHub&spm=1001.2101.3001.7020">GitHub</a>账户并创建远程仓库；</p><p>2.3、使用hexo本地编辑文章并实现本地预览；</p><p>2.4、使用git bash部署到GitHub供人浏览观看；</p><p>2.5、主题美化。</p><h3 id="三、安装步骤"><a href="#三、安装步骤" class="headerlink" title="三、安装步骤"></a>三、安装步骤</h3><p><strong>3.1、安装git</strong></p><p>官网地址：<a href="https://gitforwindows.org/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E3%80%82">https://gitforwindows.org/，下载安装。</a></p><p>然后打开Git Bash<strong>设置用户</strong>。目的时告诉远程仓库谁上传的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;GitHub的用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;注册GitHub使用的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后通过下面代码即可查看用户信息配置。</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">git config</span> <span class="hljs-literal">--</span><span class="hljs-comment">global</span> <span class="hljs-literal">--</span><span class="hljs-comment">list</span><br></code></pre></td></tr></table></figure></br><p><strong>3.2、安装Node.js</strong></p><p>Node.js中文官网地址：<a href="https://nodejs.org/zh-cn/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/zh-cn/，下载安装。</a></p><p>①安装后，在nodejs安装文件夹下新建两个空白文件夹【node_global】【node_cache】</p><p>②创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;D:\Environment\nodejs\node_global&quot;</span>  //设置使用npm全局安装时下载文件的位置<br>npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;D:\Environment\nodejs\node_cache&quot;</span>    //设置缓存位置<br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org/   //更换镜像源，加快下载速度<br>npm config list                                            //显示配置信息<br></code></pre></td></tr></table></figure><blockquote><p>以下两步可以选择不做，为优化下载位置的操作。</p></blockquote><p>③在【系统变量】下新建【NODE_PATH】，输入【D:\Program Files\nodejs\node_global\node_modules】&#x2F;&#x2F;设置下载位置</p><p>使用 npm -g 安装的时候，默认的模块D:\Program Files\nodejs\node_modules 目录将会改变为D:\Program Files\nodejs\node_global\node_modules目录</p><p>④将【系统变量】下的【Path】添加【D:\Program Files\nodejs\node_global】</p><blockquote><p>否则可能报错：‘vue’不是内部或外部命令，也不是可运行的程序或批处理文件。</p></blockquote></br><p><strong>3.3、安装hexo</strong></p><p>①安装核心框架hexo-cli，在cmd下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><p>②创建一个文件夹用于存放hexo，然后右键该文件夹使用Git bash here，意思是直接在此目录下打开Git命令行工具，之后我们只用指令生成的hexo文件就会直接存放在这个文件夹内。</p><p>③安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo --save<br></code></pre></td></tr></table></figure><p>④检查安装是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>⑤在新建文件夹下使用git bash here初始化hexo，这一步会生成hexo默认文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>⑥现在已经可以部署本地静态页面了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean <br>hexo g //生成Hexo页面<br>hexo s //启动服务<br></code></pre></td></tr></table></figure><p>本地浏览器访问<strong>localhost:4000</strong>就可以看到你的hexo博客初始化界面了。</p><h3 id="四、本地撰写文章并预览"><a href="#四、本地撰写文章并预览" class="headerlink" title="四、本地撰写文章并预览"></a>四、本地撰写文章并预览</h3><p><strong>4.1、新建文章</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">&#x27;我的第一篇文章&#x27;</span> //自定义文章标题<br></code></pre></td></tr></table></figure></br><p><strong>4.2、编辑文章</strong></p><p>hexo会自动生成一个md文件，可以自由的编辑你的md内容了</p><p>头部文件如下，可以修改基本的文章参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: postName <span class="hljs-comment">#文章页面上的显示名称</span><br><span class="hljs-built_in">date</span>: 2022-07-01 10:00:16 <span class="hljs-comment">#文章生成时间，一般不改，当然也可以任意修改</span><br>categories: 默认分类 <span class="hljs-comment">#分类</span><br>tags: [tag1,tag2,tag3] <span class="hljs-comment">#文章标签，可空，多标签请用格式，注意冒号:后面有个空格</span><br>description: 摘要<br>---<br></code></pre></td></tr></table></figure></br><p><strong>4.3、本地部署静态页面</strong></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo cl <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo s<br></code></pre></td></tr></table></figure><h3 id="五、推送至github"><a href="#五、推送至github" class="headerlink" title="五、推送至github"></a>五、推送至github</h3><p>①在github上创建并设置个人远程库，注册登录略过，不会的请自行百度。这里有一点必须注意，存储库名称必须为<code>用户名.github.io</code></p><p>②git bash下生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;XXXXXXXXX@XXX.com&quot;</span><br></code></pre></td></tr></table></figure><p>③查看<code>id_rsa.pub</code>文件，并全部复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>④在<code>Github个人设置</code>中添加<code>ssh key</code></p><p><a href="https://imgtu.com/i/jMHEFA"><img src="https://s1.ax1x.com/2022/07/01/jMHEFA.png" alt="jMHEFA.png"></a></p><p>⑤修改hexo根目录下的文件<code>_config.yml</code>中的deploy，添加之前保存的ssh，注意自己的github的hexo项目主分支名称，一般是main或者master。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br> <span class="hljs-built_in">type</span>: git<br> repo: git@github.com:yvoncosmic/yvoncosmic.github.io.git<br> branch: main<br></code></pre></td></tr></table></figure><p>⑥推送至github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d <span class="hljs-comment">#一键推送</span><br></code></pre></td></tr></table></figure><p>⑦查看blog,<code>https://username.github.io</code></p><h3 id="六、博客美化"><a href="#六、博客美化" class="headerlink" title="六、博客美化"></a>六、博客美化</h3><p>待更..</p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的世界Spigot1.18简易部署流程</title>
    <link href="/2022/06/26/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CSpigot1.18%E7%AE%80%E6%98%93%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/"/>
    <url>/2022/06/26/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CSpigot1.18%E7%AE%80%E6%98%93%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><p>1、Java环境，MC不同的版本也有对应不同的java版本，例如这里的使用的spigot1.18需要java17</p><p>2、服务端核心，下载地址<a href="https://getbukkit.org/download/spigot">https://getbukkit.org/download/spigot</a></p><h3 id="二、部署过程"><a href="#二、部署过程" class="headerlink" title="二、部署过程"></a>二、部署过程</h3><p>1、将上一步得到的核心文件spigot-1.xx.jar，上传至你的服务器目录运行即可。</p><p>注意：运行后会生成很多服务端文件，所以可以新建一个文件夹用于存放服务端文件。</p><p><a href="https://imgtu.com/i/jA4v9I"><img src="https://s1.ax1x.com/2022/06/26/jA4v9I.png" alt="jA4v9I.png"></a></p><p>2、在服务端目录下运行以下指令，其中“spigot-1.18.jar”请自行更换为自己的核心名称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -Xmx1024M -Xms1024M -jar spigot-1.18.jar nogui<br></code></pre></td></tr></table></figure><ul><li><strong>-Xms</strong> 是指程序启动时初始内存大小（此值可以设置成与-Xmx相同，以避免每次GC完成后 JVM 内存重新分配）。</li><li><strong>-Xmx</strong> 指程序运行时最大可用内存大小，程序运行中内存大于这个值会 OutOfMemory。</li></ul><p>3、首次运行核心文件，会提示你同意本地目录下生成的一份用户协议文件，我们通过vim编辑它即可。</p><p><a href="https://imgtu.com/i/jA4ONd"><img src="https://s1.ax1x.com/2022/06/26/jA4ONd.md.png" alt="jA4ONd.md.png"></a></p><p>通过<code>vim eula.txt</code>修改eula该项的值为true即可，完成后ESC→:wq保存退出即可，再次运行java指令就会生成所有的游戏服务端文件，包括地图等等。</p><p>5、经过漫长的等待后，出现下面的画面即为开服成功。</p><p><a href="https://imgtu.com/i/jA47nO"><img src="https://s1.ax1x.com/2022/06/26/jA47nO.png" alt="jA47nO.png"></a></p><p>6、请到安全组&#x2F;防火墙开放25565我的世界默认联机端口！</p><blockquote><p>TCP: 25565</p></blockquote><p>7、关闭正版认证</p><p>如果需要关闭正版认证，请编辑目录下server.properties中<code>online-mode=false</code>，不然盗版用户将无法进入！</p><h3 id="三、使用MCSManager托管你的服务器，"><a href="#三、使用MCSManager托管你的服务器，" class="headerlink" title="三、使用MCSManager托管你的服务器，"></a>三、使用MCSManager托管你的服务器，</h3><p>如果你想将你的服务进程运行在xshell的话，请使用screen挂起。</p><p>或者使用一种操作更方便，更快捷，免费的管理面板MCSM: <a href="https://mcsmanager.com/">https://mcsmanager.com/</a></p><p>它适用于主流 Linux 系统，安装成功后，使用 systemctl start mcsm-{web, daemon} 命令即可启动。你只需要执行以下命令，即可完成MCSM的快速安装。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -qO- https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/mcsmanager/</span>script<span class="hljs-regexp">/raw/m</span>aster/setup.sh | bash<br></code></pre></td></tr></table></figure><p>安装完成后如图所示，使用 http:&#x2F;&#x2F;你的ip地址:23333 即可连接面板。之后对于服务器的启停操作，监控，文件管理会十分方便。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/26/f2b834f0d4842a4c.png"></p><p>同样的，需放行端口23333(面板web服务)，24444(守护进程)</p><blockquote><p>TCP:23333</p><p>TCP:24444</p></blockquote><p>相关MCSM服务指令</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">重启 systemctl restart mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">禁用 systemctl disable mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">启用 systemctl enable mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">启动 systemctl start mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br><span class="language-xml">停止 systemctl stop mcsm-</span><span class="hljs-template-variable">&#123;daemon,web&#125;</span><span class="language-xml">.service</span><br></code></pre></td></tr></table></figure><p>更多使用说明，请参考：<a href="https://docs.mcsmanager.com/">https://docs.mcsmanager.com</a></p><h3 id="四、连接至服务器"><a href="#四、连接至服务器" class="headerlink" title="四、连接至服务器"></a>四、连接至服务器</h3><p>客户端，多人游戏，填入ip地址，完成连接。</p><p>请同时告知你的小伙伴一起游玩吧~</p><p><a href="https://imgtu.com/i/jA4x3t"><img src="https://s1.ax1x.com/2022/06/26/jA4x3t.png" alt="jA4x3t.png"></a></p><p><a href="https://imgtu.com/i/jA4VOO"><img src="https://s1.ax1x.com/2022/06/26/jA4VOO.png" alt="jA4VOO.png"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装java17流程</title>
    <link href="/2022/06/26/Linux%E4%B8%8BJava17%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <url>/2022/06/26/Linux%E4%B8%8BJava17%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>最近心血来潮想在ECS上架设MC服务器和小伙伴一起玩耍回味童年的味道，那么就必须要安装java环境。</p><p>Java版本后缀眼花缭乱，到底该安装哪个才能运行我的世界核心包，就是那个.jar的文件？</p><p>首先需了解以下几个概念，这个问题就很好解决了：</p><blockquote><ul><li><p>JDK(Java Development Kit)Java开发工具：包含：包含JRE，以及增加编译器和调试器等用于程序开发的文件。</p></li><li><p>JRE(Java Runtime Environment)Java环境：包含：Java虚拟机、库函数、运行Java应用程序所必须的文件。</p></li><li><p>JVM(Java Vitrual Machine)Java虚拟机：JVM就是一个虚拟的用于执行bytecode字节码的“虚拟计算机。</p></li></ul></blockquote><p>jdk是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。jdk是整个java开发的核心，它包含了JAVA的运行环境，JAVA工具和JAVA</p><p>基础的类库。</p><p>就单独看名字也知道jdk最大，其次是jre，最后是jvm，jdk是java开发需要的工具包，它包括了jre，而jre是java程序运行时需要的运行环境，它包含了jvm，而jvm是java<a href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E6%9C%BA&spm=1001.2101.3001.7020">虚拟机</a>，通过jvm编译字节码。</p><p><strong>总结，虽然不是很懂，但是直接JDK版就完事了</strong></p><h2 id="二、安装过程"><a href="#二、安装过程" class="headerlink" title="二、安装过程"></a>二、安装过程</h2><h3 id="2-1-Linux-手动安装Java17"><a href="#2-1-Linux-手动安装Java17" class="headerlink" title="2.1 Linux 手动安装Java17"></a>2.1 Linux 手动安装Java17</h3><p>1、下载安装包</p><p><code>wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz</code></p><p>java17和java8一样，都是LTS长期支持版本，因此这里直接下载java17</p><p>2、解压安装包，修改自动下载的包名为jdk-17，注意包的名称，可能会有版本更迭。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar zxf jdk-17_linux-x64_bin.tar.gz<br><span class="hljs-built_in">rm</span> -rf jdk-17_linux-x64_bin.tar.gz<br><span class="hljs-built_in">mv</span> jdk-17.0.3.1 jdk-17<br></code></pre></td></tr></table></figure><p>3、移动文件夹到&#x2F;opt下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> jdk-17 /opt<br></code></pre></td></tr></table></figure><p>4、将java添加到环境变量末尾</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/profile<br></code></pre></td></tr></table></figure><p>centos7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/opt/jdk-17<br><span class="hljs-built_in">export</span> PATH=/opt/php/bin:/usr/local/jdk-17/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>ubuntu20.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">JAVA_HOME=/opt/jdk-17<br>PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> JAVA_HOME PATH<br></code></pre></td></tr></table></figure><p>5、重新加载环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>6、验证java是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><p>显示下面内容，说明安装成功</p><blockquote><p>java version “17” 2021-09-14 LTS<br>Java(TM) SE Runtime Environment (build 17+35-LTS-2724)<br>Java HotSpot(TM) 64-Bit Server VM (build 17+35-LTS-2724, mixed mode, sharing)</p></blockquote><h3 id="2-2-Linux自动安装Java17"><a href="#2-2-Linux自动安装Java17" class="headerlink" title="2.2 Linux自动安装Java17"></a>2.2 Linux自动安装Java17</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install openjdk-17-jdk<br></code></pre></td></tr></table></figure><p>出现如下输出即为安装成功</p><blockquote><p>root@iZbp1gqpip1640l5lh3uynZ:~# java -version<br>openjdk version “17.0.3” 2022-04-19<br>OpenJDK Runtime Environment (build 17.0.3+7-Ubuntu-0ubuntu0.20.04.1)<br>OpenJDK 64-Bit Server VM (build 17.0.3+7-Ubuntu-0ubuntu0.20.04.1, mixed mode, sharing)</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Teamspeak3服务端简易部署</title>
    <link href="/2022/06/24/TeamSpeak%203%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%AE%80%E6%98%93%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/06/24/TeamSpeak%203%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%AE%80%E6%98%93%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p>最近腾讯云618活动，入手了一台轻量应用服务器，新人首单价格还行，配置如图。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/5380d996a801d111.png"></p><p>参与买赠活动有两个福利可以选择其中一个：1.使用一个4C8G的服务器一个月 2.续费你的订单服务器一个月。我选择了后者，我觉得只是试用的话那还是算了，不如续杯。</p><p>正好拿来与小伙伴测试下传说的职业哥用的交流软件Teamspeak3，个人的部署流程如下</p><h3 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h3><p>1、ECS云服务器一台，我的系统是Ubuntu Server 20.04 LTS 64bit，其它大同小异</p><p>2、Teamspeak官网下载对应的服务端文件：<a href="https://www.teamspeak.com/en/downloads/#server">https://www.teamspeak.com/en/downloads/#server</a></p><p>Teamspeak客户端：<a href="https://www.teamspeak.com/en/downloads/#client">https://www.teamspeak.com/en/downloads/#client</a> (需自行汉化)</p><p>Teamspeak汉化客户端(盗版)：<a href="http://www.ts1.cn/download">http://www.ts1.cn/download</a></p><p>3、Xshell，Xftp或者其它命令行工具以及FTP工具</p><h3 id="二、部署服务端"><a href="#二、部署服务端" class="headerlink" title="二、部署服务端"></a>二、部署服务端</h3><p>将上步 2 中得到的服务端压缩包解压缩后用Xftp直接上传你的服务器目录，文件夹我命名为teamspeak3，方便命令行检索。</p><p>(个人习惯用root账户以及root根目录，虽然很多地方都强调建议用普通用户运行，可能是我还没吃到亏2333)</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/8fa36299d6d57ca0.png"></p><p>在终端中进入该文件夹，给予sh脚本运行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 777 ts3server_startscript.sh<br></code></pre></td></tr></table></figure><p>启动服务之前，你还需要同意一份用户协议，我们直接执行该指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> .ts3server_license_accepted<br></code></pre></td></tr></table></figure><p>启动服务，这一步我直接用root用户运行了，尽管它会发出警告。建议懂得用户权限系统的运行在普通用户下即可，我是弄不明白。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ts3server_startscript.sh start<br></code></pre></td></tr></table></figure><p>接着会给你登录账号和密码，以及一枚权限密钥token，这个密钥是最重要的请保存下来，一会登录服务器要用。</p><p>有且只能使用一次来确定服务器管理员身份。后续有需要的话请使用客户端生成新的密钥，以防更换电脑带来的权限丢失。</p><h3 id="三、放行端口"><a href="#三、放行端口" class="headerlink" title="三、放行端口"></a>三、放行端口</h3><p>记得在服务商或者终端放行服务需要的端口，ts3需要的端口是</p><blockquote><p>UDP: 9987</p><p>TCP: 10011</p><p>TCP: 30033</p></blockquote><p>到这一步，服务端的部署基本就完成了，此时ts3就可以连上你的私人语言频道了，在客户端左上角连接里填入你的服务器ip或者域名(多一步解析)以及上一步中终端给你的信息即可。快和小伙伴畅享高质量，无延迟的语言交流吧。</p><p><img src="https://s3.bmp.ovh/imgs/2022/06/24/747808fadc3cc5d2.png"></p><h3 id="四、设置开机自启"><a href="#四、设置开机自启" class="headerlink" title="四、设置开机自启"></a>四、设置开机自启</h3><p>服务运行后，是没有开机自启的。如果遇到平时重启，主机崩溃之类的还要手动运行较麻烦。可以相应设置一个开机自启的脚本，灵活应对重启状况。</p><p>第一步，切换到root用户下，用su指令即可</p><p>第二步，在系统服务文件下新建一个teamspeak.service文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /lib/systemd/system/teamspeak.service<br></code></pre></td></tr></table></figure><p>第三步，进入插入模式，向文本添加以下内容。注意所有涉及路径的地方请根据个人情况自行修改，否则将无法运行。<br>“&#x2F;root&#x2F;teamspeak3”为我的安装路径</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Teamspeak server<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">WorkingDirectory</span>=/root/teamspeak3<br><span class="hljs-attr">User</span>=teamspeak<br><span class="hljs-attr">Group</span>=teamspeak<br><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">ExecStart</span>=/root/teamspeak3/ts3server_startscript.sh start<br><span class="hljs-attr">Inifile</span>=ts3server.ini<br><span class="hljs-attr">ExecStop</span>=/root/teamspeak3/ts3server_startscript.sh stop<br><span class="hljs-attr">PIDFile</span>=/root/teamspeak3/ts3server.pid<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">15</span><br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>第四步，重新加载服务配置文件，使新服务的服务程序配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br></code></pre></td></tr></table></figure><p>第五步，设置开启服务自启动即可，因为此时teamspeak已经在运行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> teamspeak.service<br></code></pre></td></tr></table></figure><p>附上三条启停的指令</p><p>1.启动 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start teamspeak.serviceb<br></code></pre></td></tr></table></figure><p>2.停止 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop teamspeak.service<br></code></pre></td></tr></table></figure><p>3.重启 TeamSpeak：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart teamspeak.serviceb<br></code></pre></td></tr></table></figure><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>个人觉得还是比yy好用不少的，主要体现在以下几点：更少的资源暂用，语音感应激活（更少收录队友杂音），启动速度更快，无开屏弹窗广告纵享丝滑。</p><p>当然如果你单纯只为了架ts3而购买服务器是大可不必的，和小伙伴一顿使用下来没浪费多少多少服务器资源，静置状态只有2%的内存占用，相当于40M？？可以说真的很轻量了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>亿点心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>害行的一次海底捞</title>
    <link href="/2021/12/16/%E5%AE%B3%E8%A1%8C%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B5%B7%E5%BA%95%E6%8D%9E/"/>
    <url>/2021/12/16/%E5%AE%B3%E8%A1%8C%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B5%B7%E5%BA%95%E6%8D%9E/</url>
    
    <content type="html"><![CDATA[<p>昨天吃了海底捞。两个人334，加上100一张的200元代金券，实付234.</p><p>我焯，挺辣的嗷</p><p>搞得今天皮燕子都有点辣。还以为是痔疮。</p><p><a href="https://imgtu.com/i/jA5aDO"><img src="https://s1.ax1x.com/2022/06/26/jA5aDO.jpg" alt="jA5aDO.jpg"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>小食谈记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
